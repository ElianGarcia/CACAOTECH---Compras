<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Imrimirbutton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAaFJREFUWEft
        170rRXEcx/EjGSgsJqPF5B8gpRhMNklZUEp2D6WUwX+ATAarspoMQh5GG5tJHpIMhPD+3Pz0Pff83Hse
        OvcMfOpV937v7/e733vPc1Ah/djHIz5TesAeupEoQ/iAb9E03tGH2LmAJt5gHlMpLUL/gtY6Q6y0wv36
        GRUyZgFa6xUNKlRLOzRBxlTImGm49ZpVqJb/Bv5uA3XowCDchDWoiSw24dbrhb4jkgncww3M2x3GUcoI
        fINqYRjBqSnkZRcr2DY1OUfwbAp5OIZLPS7hPntDaHAedmBzAPt56E0edA0YRRN0SJZfZUNviuAt1lKk
        YO+AtL22MjqBW8+3w0cK1+a1zmRZY0/FT+a1Eyn4GtDh05aQ5ihVG7gqK/ga6IQdE4fmKJUauEXpgmOL
        tWxgFUELDr8L4mtAY3TBSkJzlN8a0A7+c3nW9prEBtSVG5SkgS74YhtYh75D490+EonvhiTOJpiFL7aB
        1HdEhTcQ5zBshC+JGyj8wUSxj2ZLmEtpGYkfzZTCH06VARxBf51v0TheoEf8HngSBF/ykCy1nk+LIgAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="btConsulta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAXtJREFUWEft
        ljlKBEEUQEfFBVQw0MQbuJxDI1FQUTAXFxQ9hAYaeAUNBAO9iKELLrikgmCggrigvtd0wwQyTnX32Ajz
        4DFd1fV/9cxU/a5Snf9MK87gAV7jQ6zX++g9x9SECbzFr1+8wXHMjQZcx2SCY1zBAeyOHcRVPMFk3BY2
        YWbW0IRvuIiVknpvCR1rzCZmYhQ/8RWH7KgSxxpj7IgdaWjBK/SbzNoRyDwae4nNdoQyjSY4wkY7AvHv
        OEVzTNoRyh4avBy10uHCNMdu1ArEn87gvqiVDneHOc6iViBPaHBH1EpHJ5rjMWoF8owGt0etdGR6gDz+
        AouVOc6jViCFL8JkG1pe05TUzNuwvBBZ+0NZQGNTFyIZQ5N84LAdVZJLKZYevEcf4h1DX0YbmJpevEAT
        3cWf6uvYxdWPbbGu9lxfx+WTH2IX/tmB5KfJEzxuuTt20BX+Euv1Nk5hpiNZpclrTn3yQiaXpGJ58nHf
        F8IcFjZ5nT+mVPoGssiGom2D26cAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAACrAAAAqwAAAP8AAAD/AAAAVQAAAP8AAAD/AAAAVQAA
        AP8AAAD/AAAAqwAAAKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAAAKsAAAD/AAAA/wAAAFUAAAD/AAAA/wAA
        AFUAAAD/AAAA/wAAAKsAAACrAAAA/wAAAP8AAAD/AAAA/wAAAKsAAACrAAAA/wAAAP8AAABVAAAA/wAA
        AP8AAABVAAAA/wAAAP8AAACrAAAAqwAAAP8AAAD/AAAA/wAAAP8AAACrAAAAqwAAAP8AAAD/AAAAVQAA
        AP8AAAD/AAAAVQAAAP8AAAD/AAAAqwAAAKsAAAD/AAAA/wAAAAAAAAAAAAAAAAAAAKsAAAD/AAAA/wAA
        AFUAAAD/AAAA/wAAAFUAAAD/AAAA/wAAAKsAAACrAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAA4AAAAVQAA
        AFUAAABVAAAA/wAAAP8AAABVAAAA/wAAAP8AAACrAAAAqwAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAVQAAAP8AAAD/AAAAVQAAAAAAAAAAAAAAAAAAAKsAAAD/AAAA/wAAAFMAAACeAAAAIgAA
        AAAAAAAAAAAAAAAAABwAAABVAAAAVQAAABwAAAAAAAAAAAAAAAAAAACrAAAA/wAAAP8AAADxAAAA/wAA
        AKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAKsAAACrAAAAngAA
        APMAAADxAAAApgAAAKcAAABRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEgAAANUAAAD/AAAA9AAAAAAAAAAAAAAAAAAAAAAAAACeAAAA9AAAAFAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABSAAAA8AAAAPcAAACQAAAABAAAAAAAAAAuAAAA+wAAAP8AAAC1AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAA0AAAAPYAAADvAAAA7gAAAJ0AAAC7AAAA8QAA
        AEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAD/AAAA/wAAAFUAAAAAAAAAAAAA
        AEcAAADxAAAAugAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAhwAAAIYAAAADAAAAAAAA
        AAAAAAAAAAAAtwAAAP8AAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFIAAADtAAAAnAJAAAACQAAAAkAAAAJAAADiQAAA/kAAAP54AAC/+AAAH/wAAAf/
        AADjzwAA8ccAAPwHAAD+eQAA/ngAAP/8AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAA
        AKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAqwAAAP8AAAD/AAAA/wAAAP8AAACrAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAA
        AFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAFUAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAACrAAAA/wAAAP8AAAD/AAAA/wAAAKsAAAAAAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAABVAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAAAAAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAqwAAAP8AAAD/AAAA/wAAAP8AAACrAAAAAAAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAVQAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAACrAAAA/wAAAP8AAAD/AAAA/wAA
        AKsAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAKsAAAD/AAAA/wAA
        AP8AAAD/AAAAqwAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAqwAA
        AP8AAAD/AAAA/wAAAP8AAACrAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAVQAAAFUAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAACrAAAA/wAAAP8AAAD/AAAA/wAAAKsAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABVAAAAVQAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAAAAAAKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAAAAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AFUAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAqwAA
        AKsAAACrAAAAqwAAAKsAAAAAAAAAqwAAAP8AAAD/AAAA/wAAAP8AAACrAAAAAAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAVQAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrAAAA/wAAAP8AAAD/AAAA/wAAAKsAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABVAAAAVQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKsAAAD/AAAA/wAAAP8AAAD/AAAAqwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqwAAAP8AAAD/AAAA/wAA
        AP8AAACrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAPAAAAPwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAByAAAAqwAA
        AKsAAACrAAAAqwAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVQAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAAPwAAAO4AAAD/AAAA/QAAAIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADQAAAA/wAAAP8AAAD/AAAA/gAAACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPEAAAD/AAAA/wAAAP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHAAAAFUAAABVAAAAVQAAAFUAAABVAAAArAAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAhQAA
        AAsAAAAgAAAAPgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAqAAAAOkAAADUAAAA1wAA
        AP8AAAD/AAAA7wAAAP4AAAD/AAAA7QAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAUgAAAOMAAAD/AAAA/wAAAP8AAAD/AAAAzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFgAAAKkAAAD0AAAAzQAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATQAAAP8AAAD/AAAA/wAAAP8AAAD1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACsAAAA/wAAAP8AAAD/AAAA7QAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAA7wAAAP8AAAD/AAAA/wAAAP8AAAB/AAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPUAAAD/AAAA/wAAAP8AAAD/AAAARQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAyQAAAOkAAADfAAAA/wAA
        AP8AAACxAAAADgAAAAAAAAAAAAAAAAAAABwAAACpAAAA/wAAAP8AAAD/AAAA/wAAAP8AAABCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABvAAAA+wAAAP8AAADqAAAA6wAAAOYAAAC2AAAA8wAAAP8AAAD9AAAA+AAAAP8AAAD/AAAA/wAA
        AOIAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABAAAAA8QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAyQAAADQAAAAPAAAAPwAA
        AD8AAADiAAAA/wAAAOIAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoAAAA/wAAAP8AAAD/AAAA/wAAAMIAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAACMAAADiAAAA/wAAAOEAAAA+AAAAPgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAD/AAAA/wAAAP8AAAD/AAAAeQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAADiAAAA/wAAAP8AAAD/AAAA7QAAAD0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAMsAAAD/AAAA/wAA
        AMkAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUAAAD/AAAA/wAAAP8AAAD/AAAAzgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        ADQAAAA0AAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwAAAP8AAAD/AAAA/wAA
        AP8AAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAA7wAA
        AP8AAAD/AAAA/wAAAKoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA/AAAAyQAAAOgAAACmAAAAFQYIEGAGCBBgBggQYAYIEGAGCBBgBggQYAYIEGAGCBBg/ggQYP4I
        EGD+CBBg//gQYP/4H+D/+B/g//w/4If//+AH///gB////wH///+AH////A/4//4P8H/+D/B//wPgf//w
        AD//+A8f//gfj//8P8H//D/g////4P///+D////x
</value>
  </data>
</root>